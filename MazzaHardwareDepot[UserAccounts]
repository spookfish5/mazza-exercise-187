package edu.cpt187.mazza.exercise6;
import java.io.IOException;
import java.io.PrintWriter;
import java.io.FileInputStream;
import java.io.FileWriter;
import java.util.Scanner;
public class UserAccounts 
{//BEGIN CLASS
	//AUTHOR: NICK MAZZA
	//COURSE: CPT 187
	//PURPOSE: UserAccounts allows creation of accounts and passwords
	//CREATEDATE: 12/2/2020
	//attributes
	private final int NOT_FOUND=-1;
	private final int RESET_VALUE=0;
	private final int MAXIMUM_RECORDS=50;
	private String[] userNames= new String[MAXIMUM_RECORDS];
	private String[] passwords= new String[MAXIMUM_RECORDS];
	private String masterFileName="";
	private int recordCount=0;
	private int searchedIndex=0;
	//constructor
	UserAccounts(String borrowedFileName)
	{
		masterFileName=borrowedFileName;
	}
	//behaviors
	public void setUserAccountArrays()
	{//BEGIN sUAA
		//read
		try
		{//BEGIN TRY
			Scanner infile = new Scanner (new FileInputStream(masterFileName));
			recordCount=RESET_VALUE;
			while (infile.hasNext()==true && recordCount < MAXIMUM_RECORDS)
			{//BEGIN TRYWHILE
				userNames[recordCount]= infile.next();
				passwords[recordCount]= infile.next();
				recordCount++;
			}//END TRYWHILE
			infile.close();
		}//END TRY
		catch (IOException ex)
		{//BEGIN CATCH
			recordCount=MAXIMUM_RECORDS;
		}//END CATCH
	}//END sUAA
	public void setSearchedIndex(String borrowedUserName)
	{//BEGIN sSI
		searchedIndex=getSeqSearch(borrowedUserName);
	}//END sSI
	public  void setSearchedIndex(String borrowedUserName, String borrowedPassword)
	{//BEGIN sSI2
		searchedIndex=getSeqSearch(borrowedUserName);
		if (searchedIndex>=RESET_VALUE && getPasswordMatch(borrowedPassword)==false)
		{//BEGIN passwdfail
			searchedIndex=NOT_FOUND;
		}//END passwdfail
	}///END sSI2
	public void setWriteOneRecord(String borrowedUserName, String borrowedPassword)
	{//BEGIN sWOR
		try
		{//BEGIN try
			PrintWriter filePW = new PrintWriter(new FileWriter(masterFileName, true));
			filePW.printf("%n%s\t%s", borrowedUserName, borrowedPassword);
			filePW.close();
		}//END try
		catch (IOException ex)
		{//BEGIN catch
			recordCount=NOT_FOUND;
		}//END catch
	}//END sWOR
	public int getSeqSearch(String borrowedBorrowedUserName)
	{//BEGIN gSS
		//local var
		int localIndex=RESET_VALUE;
		int localFound=NOT_FOUND;
		//read
		while (localIndex<recordCount)
		{//BEGIN searchwhile
			if (borrowedBorrowedUserName.equalsIgnoreCase(userNames[localIndex]))
			{//BEGIN founduser
				localFound=localIndex;
				localIndex=recordCount;
			}//END founduser
			else
			{//BEGIN ifnotfounda
				localIndex++;
			}//END ifnotfound
		}//END searchwhile
		return localFound;
	}//END gSS
	public boolean getPasswordMatch(String borrowedBorrowedPassword)
	{//BEGIN gPM			
		return (borrowedBorrowedPassword.equals(passwords[searchedIndex]));
	}//END gPM
	public String getFileName()
	{//BEGIN gFILENAME
		return masterFileName;
	}//END gFILENAME
	public int getMaximumRecords()
	{//BEGIN gMAXREC
		return MAXIMUM_RECORDS;
	}//END gMAXREC
	public int getRecordCount()
	{//BEGIN gRC
		return recordCount;	
	}//END gRC
	public int getSearchedIndex()
	{//BEGIN gSEARCH
		return searchedIndex;
	}//END gSEARCH
}//END CLASS
